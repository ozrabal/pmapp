---
import Layout from "../../../layouts/Layout.astro";
import { AssumptionsTabView } from "../../../components/assumptions/AssumptionsTabView";
import { type ProjectDto } from "../../../types";
import { ProjectService } from "../../../lib/services/project.service";
import { aiService } from "../../../lib/services/ai.service";
import { DEFAULT_USER_ID } from "../../../db/supabase.client";

export const prerender = false;

const { id } = Astro.params;

// Redirect if no ID provided
if (!id) {
  return Astro.redirect('/dashboard');
}

// Get project data
let project: ProjectDto | undefined;
let error: string | null = null;

try {
  // Create an instance of ProjectService with the Supabase client
  const projectService = new ProjectService(Astro.locals.supabase);
  // Use getProject with DEFAULT_USER_ID
  project = await projectService.getProject(DEFAULT_USER_ID, id);
} catch (err) {
  const errorMessage = err instanceof Error ? err.message : 'Nie udało się pobrać projektu';
  error = errorMessage;
  
  // If project not found, redirect to dashboard
  if (errorMessage.includes('not found') || errorMessage.includes('nie znaleziono')) {
    return Astro.redirect('/dashboard?error=project-not-found');
  }
}

// Page title
const pageTitle = error 
  ? 'Błąd | Założenia projektu'
  : project ? `${project.name} | Założenia projektu` : 'Założenia projektu';

// Active navigation item
const activeNav = 'assumptions';
---

<Layout title={pageTitle} activeNav={activeNav}>
  <main class="container max-w-7xl mx-auto px-4 sm:px-6 py-8">
    {error ? (
      <div class="bg-red-50 dark:bg-red-950/30 border border-red-200 dark:border-red-800 rounded-md p-6 mb-6">
        <h2 class="text-xl font-semibold text-red-700 dark:text-red-300 mb-2">
          Wystąpił problem
        </h2>
        <p class="text-red-600 dark:text-red-400">{error}</p>
        <div class="mt-4">
          <a href="/dashboard" class="inline-flex items-center text-sm font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300">
            &larr; Wróć do listy projektów
          </a>
        </div>
      </div>
    ) : (
      <>
        {/* Project Header */}
        <div class="mb-6">
          <a href={`/projects/${id}/edit`} class="inline-flex items-center text-sm font-medium text-muted-foreground hover:text-foreground mb-2">
            &larr; Wróć do edycji projektu
          </a>
          <h1 class="text-2xl md:text-3xl font-bold tracking-tight">{project?.name}</h1>
          {project?.description && (
            <p class="text-muted-foreground mt-2 max-w-3xl">{project.description}</p>
          )}
        </div>
        
        {/* AssumptionsTabView Component */}
        {project && (
          <AssumptionsTabView
            client:load
            projectId={id}
            initialProject={project}
          />
        )}
      </>
    )}
  </main>
</Layout>