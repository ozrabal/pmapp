---
import Layout from "../../layouts/Layout.astro";
import { NewPasswordForm } from "../../components/auth/NewPasswordForm";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { AlertCircle } from "lucide-react";

// Extract token from URL - in the real implementation, this would handle query params
// const token = new URL(Astro.request.url).searchParams.get('token');
const token = "sample-token"; // Simplified for implementation

// Checking session state - in the real implementation, redirect if user is already logged in
// const { data: { session } } = await Astro.locals.supabase.auth.getSession();
const isLoggedIn = false; // Simplified for implementation

if (isLoggedIn) {
  return Astro.redirect("/dashboard");
}

const hasError = !token; // In the real implementation, validate the token

export const prerender = false;
---

<Layout title="Nowe hasło | Plan My App">
  <div class="flex min-h-screen items-center justify-center px-4 py-12 sm:px-6 lg:px-8">
    <div class="w-full max-w-md space-y-8">
      <div class="text-center">
        <h1 class="text-3xl font-bold">Ustaw nowe hasło</h1>
        <p class="mt-2 text-sm text-gray-600">Wprowadź i potwierdź swoje nowe hasło</p>
      </div>

      <div class="mt-8 rounded-lg border border-gray-200 bg-white p-6 shadow-sm dark:border-gray-800 dark:bg-gray-900">
        {
          hasError ? (
            <Alert variant="destructive">
              <AlertCircle className="h-4 w-4" />
              <AlertDescription>
                Nieprawidłowy lub wygasły link do resetowania hasła. Spróbuj ponownie zresetować hasło.
              </AlertDescription>
            </Alert>
          ) : (
            <NewPasswordForm token={token} client:load />
          )
        }
      </div>

      <div class="text-center mt-6">
        <a href="/auth/login" class="text-sm text-blue-600 hover:underline"> Powrót do logowania </a>
      </div>
    </div>
  </div>
</Layout>
